/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 animTest.glb 
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";
export function AnimTest(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/animTest.glb");
  const { actions, names } = useAnimations(animations, group);
  const onHoverHad = () => {
    const action = actions[names[1]];
    action.setLoop(THREE.LoopOnce); // Set the animation to play only once
    action.reset(); // Reset the action to its initial state
    action.clampWhenFinished = true; // Prevent the animation from resetting to the initial state
    action.timeScale = 1; // Play forward
    action.play();
  };

  const onHoverLeave = () => {
    const action = actions[names[1]];
    action.reset(); // Reset the action to its initial state
    action.setLoop(THREE.LoopOnce); // Set the animation to play only once
    action.time = action.getClip().duration; // Set the animation time to the end
    action.timeScale = -1; // Reverse the animation
    action.play();
  };
  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      onPointerEnter={onHoverHad}
      onPointerLeave={onHoverLeave}
    >
      <directionalLight intensity={1} position={[10, 10, 10]} />
      <ambientLight />
      <group name="Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="f6bcb81c5d674405b84df409a29b9a55fbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode" />
            </group>
          </group>
        </group>
        <mesh
          name="BASE_HEART_Material_#41_0"
          geometry={nodes["BASE_HEART_Material_#41_0"].geometry}
          material={materials["Material_41.001"]}
          morphTargetDictionary={
            nodes["BASE_HEART_Material_#41_0"].morphTargetDictionary
          }
          morphTargetInfluences={
            nodes["BASE_HEART_Material_#41_0"].morphTargetInfluences
          }
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.046}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/animTest.glb");
