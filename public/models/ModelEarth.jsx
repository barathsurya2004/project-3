/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 modelEarth.glb 
*/

import React, { useRef, useState } from "react";
import { OrbitControls, PerspectiveCamera, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { ScrollTrigger } from "gsap/all";
import gsap from "gsap";
import { useGSAP } from "@gsap/react";
gsap.registerPlugin(ScrollTrigger);
export function ModelEarth(props) {
  const { nodes, materials } = useGLTF("/models/newEarth.glb");
  const [yRot, setYRot] = useState(0);
  const earthRef = useRef();
  const [rotate, setRotate] = useState(true);

  useFrame((state, delta) => {
    if (rotate) {
      earthRef.current.rotation.y += delta;
      // console.log(yRot);
    }
  });
  useGSAP(() => {
    gsap.to(earthRef.current.position, {
      x: 0,
      scrollTrigger: {
        trigger: ".world-move-zoom",
        start: "top bottom",
        end: "top 50%",
        onEnter: () => setRotate(false),
        onLeaveBack: () => setRotate(true),
        scrub: 1,
      },
    });
    gsap.to(earthRef.current.position, {
      z: 3,
      y: 0.02,
      scrollTrigger: {
        trigger: ".world-move-zoom",
        start: "top bottom",
        end: "top top",
        scrub: 1,
      },
    });
    gsap.to(earthRef.current.rotation, {
      y: Math.PI * (2 - 0.376) + 2 * Math.PI,
      x: -Math.PI * 0.05,
      scrollTrigger: {
        trigger: ".world-move-zoom",
        start: "top bottom",
        end: "top 20%",
        scrub: 0.5,
      },
    });
  }, []);
  return (
    <group scale={1} position={[1.8, 0, 0]} ref={earthRef}>
      {/* <axesHelper args={[5]} /> */}
      <group {...props} dispose={null} rotation-z={Math.PI * 0.5}>
        {/* <OrbitControls /> */}
        <mesh
          geometry={nodes.map_new.geometry}
          material={materials["Material"]}
          rotation={[0, 0, -Math.PI / 2]}
          scale={2}
        />
        <mesh
          geometry={nodes.Icosphere.geometry}
          material={materials["Matte Metallic Paint"]}
          scale={0.506}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/modelEarth.glb");
